import fs from 'fs/promises';
import fetch from 'node-fetch';

const QURAN_API_URL = 'http://api.alquran.cloud/v1/quran/quran-uthmani';
const OUTPUT_FILE = 'data/quran-text.ts';

async function fetchQuranData() {
    console.log('Fetching Quran data from API...');
    try {
        const response = await fetch(QURAN_API_URL);
        if (!response.ok) {
            throw new Error(`API call failed with status: ${response.status}`);
        }
        const data = await response.json();
        console.log('Successfully fetched data.');
        return data;
    } catch (error) {
        console.error('Error fetching Quran data:', error);
        throw error;
    }
}

function processData(apiResponse) {
    console.log('Processing data...');
    if (apiResponse.status !== 'OK' || !apiResponse.data.surahs) {
        throw new Error('Invalid API response format.');
    }

    const ayahs = [];
    for (const surah of apiResponse.data.surahs) {
        for (const ayah of surah.ayahs) {
            ayahs.push({
                surah: surah.number,
                ayah: ayah.numberInSurah,
                text: ayah.text,
            });
        }
    }
    console.log(`Processed ${ayahs.length} ayahs.`);
    return ayahs;
}

async function generateTypeScriptFile(ayahs) {
    console.log(`Generating TypeScript file at ${OUTPUT_FILE}...`);
    const header = `import { normalizeArabic } from '../utils/text';
import { QuranAyah } from '../types';

// This file was auto-generated by the fetch-quran-data.mjs script.
// It contains the full text of the Quran for client-side search.

interface QuranAyahSource {
  surah: number;
  ayah: number;
  text: string;
}

const quranSourceText: QuranAyahSource[] = `;

    const footer = `;

// Pre-process the Quran text for optimized searching.
export const quranText: QuranAyah[] = quranSourceText.map(ayah => {
    const normalizedText = normalizeArabic(ayah.text);
    return {
        ...ayah,
        normalizedText,
        normalizedTextNoSpaces: normalizedText.replace(/\\s+/g, ''),
    };
});
`;

    const ayahsString = JSON.stringify(ayahs, null, 2);
    const fileContent = `${header}${ayahsString}${footer}`;

    try {
        await fs.writeFile(OUTPUT_FILE, fileContent, 'utf-8');
        console.log('Successfully generated the TypeScript file.');
    } catch (error) {
        console.error('Error writing to file:', error);
        throw error;
    }
}

async function main() {
    try {
        const apiData = await fetchQuranData();
        const processedAyahs = processData(apiData);
        await generateTypeScriptFile(processedAyahs);
        console.log('All done!');
    } catch (error) {
        console.error('Script failed:', error.message);
        process.exit(1);
    }
}

main();
